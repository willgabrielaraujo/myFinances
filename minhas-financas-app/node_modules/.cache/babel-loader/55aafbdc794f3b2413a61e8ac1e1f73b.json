{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielaraujo/Dev/workspace/web/minhas-financas-app/src/views/entries/entries.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Card from \"../../components/card\";\nimport FormGroup from '../../components/form-group';\nimport SelectMenu from '../../components/selectMenu';\nimport EntryList from './entryList';\nimport EntryService from '../../app/services/entryService';\nimport LocalStorageService from '../../app/services/localStorageService';\nimport { errorAlert, successAlert } from \"../../components/toastr\";\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\n\nclass Entries extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      year: '',\n      month: '',\n      description: '',\n      type: '',\n      status: '',\n      showDeletionConfirmDialog: false,\n      entryToBeDeleted: {},\n      entries: []\n    };\n\n    this.search = () => {\n      if (!this.validate()) {\n        return false;\n      }\n\n      const currentUser = LocalStorageService.getItem('_usuario_logado');\n      this.service.filter({\n        usuario: currentUser.id,\n        year: this.state.year,\n        month: this.state.month,\n        description: this.state.description,\n        type: this.state.type,\n        status: this.state.status\n      }).then(response => {\n        successAlert('Data fetched!');\n        this.setState({\n          entries: response.data\n        });\n      }).catch(error => {\n        errorAlert(error.response.data);\n      });\n    };\n\n    this.editEntry = id => {\n      console.log('Editing the entry ', id);\n    };\n\n    this.deleteEntry = () => {\n      this.service.deleteEntry(this.state.entryToBeDeleted.id).then(response => {\n        this.removeFromEntryList(this.state.entryToBeDeleted);\n        successAlert(\"Entry deleted!\");\n      }).catch(error => {\n        errorAlert('Failed to delete entry!');\n      });\n    };\n\n    this.showDeletionDialog = entry => {\n      this.setState({\n        showDeletionConfirmDialog: true,\n        entryToBeDeleted: entry\n      });\n    };\n\n    this.hideDeletionDialog = () => {\n      this.setState({\n        showDeletionConfirmDialog: false,\n        entryToBeDeleted: {}\n      });\n    };\n\n    this.service = new EntryService();\n  }\n\n  validate() {\n    if (!this.state.year) {\n      errorAlert('Year is required');\n      return false;\n    }\n\n    return true;\n  }\n\n  removeFromEntryList(entry) {\n    const entries = this.state.entries;\n    const entryIndex = entries.indexOf(entry);\n    entries.splice(entryIndex, 1);\n    this.setState(entries);\n  }\n\n  render() {\n    const months = this.service.getMonthList();\n    const types = this.service.getTypeList();\n    const deletionDialogFooter = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Yes\",\n      icon: \"pi pi-check\",\n      onClick: this.deleteEntry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      label: \"No\",\n      icon: \"pi pi-times\",\n      onClick: this.hideDeletionDialog,\n      className: \"p-button-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Card, {\n      title: \"Search Entries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bs-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      label: \"Ano: *\",\n      htmlFor: \"inputYear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.year,\n      onChange: e => this.setState({\n        year: e.target.value\n      }),\n      id: \"inputYear\",\n      placeholder: \"Year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      label: \"Month: \",\n      htmlFor: \"inputMonth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SelectMenu, {\n      id: \"inputMonth\",\n      value: this.state.month,\n      onChange: e => this.setState({\n        month: e.target.value\n      }),\n      className: \"form-control\",\n      options: months,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      label: \"Description: *\",\n      htmlFor: \"inputDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.description,\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      id: \"inputDescription\",\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      label: \"Type: \",\n      htmlFor: \"inputType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SelectMenu, {\n      id: \"inputType\",\n      value: this.state.type,\n      onChange: e => this.setState({\n        type: e.target.value\n      }),\n      className: \"form-control\",\n      options: types,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"Buscar\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, \"Cadastrar\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EntryList, {\n      entries: this.state.entries,\n      editAction: this.editEntry,\n      deleteAction: this.showDeletionDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      header: \"Delete entry\",\n      visible: this.state.showDeletionConfirmDialog,\n      style: {\n        width: '50vw'\n      },\n      modal: true,\n      footer: deletionDialogFooter,\n      onHide: () => this.setState({\n        showDeletionConfirmDialog: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \"Do you confirm the deletion of this entry?\")));\n  }\n\n}\n\nexport default withRouter(Entries);","map":{"version":3,"sources":["/Users/gabrielaraujo/Dev/workspace/web/minhas-financas-app/src/views/entries/entries.js"],"names":["React","withRouter","Card","FormGroup","SelectMenu","EntryList","EntryService","LocalStorageService","errorAlert","successAlert","Dialog","Button","Entries","Component","constructor","state","year","month","description","type","status","showDeletionConfirmDialog","entryToBeDeleted","entries","search","validate","currentUser","getItem","service","filter","usuario","id","then","response","setState","data","catch","error","editEntry","console","log","deleteEntry","removeFromEntryList","showDeletionDialog","entry","hideDeletionDialog","entryIndex","indexOf","splice","render","months","getMonthList","types","getTypeList","deletionDialogFooter","e","target","value","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from \"../../components/card\"\nimport FormGroup from '../../components/form-group'\nimport SelectMenu from '../../components/selectMenu'\nimport EntryList from './entryList'\nimport EntryService from '../../app/services/entryService'\nimport LocalStorageService from '../../app/services/localStorageService'\nimport { errorAlert, successAlert } from \"../../components/toastr\";\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\n\nclass Entries extends React.Component {\n\n  state = {\n    year: '',\n    month: '',\n    description: '',\n    type: '',\n    status: '',\n    showDeletionConfirmDialog: false,\n    entryToBeDeleted: {},\n    entries: []\n  }\n\n  constructor() {\n    super()\n    this.service = new EntryService()\n  }\n\n  validate() {\n    if (!this.state.year) {\n      errorAlert('Year is required')\n      return false\n    }\n\n    return true\n  }\n\n  search = () => {\n    if (!this.validate()) {\n      return false\n    }\n\n    const currentUser = LocalStorageService.getItem('_usuario_logado')\n\n    this.service.filter({\n      usuario: currentUser.id,\n      year: this.state.year,\n      month: this.state.month,\n      description: this.state.description,\n      type: this.state.type,\n      status: this.state.status\n    }).then(response => {\n      successAlert('Data fetched!')\n      this.setState({ entries: response.data })\n    }).catch(error => {\n      errorAlert(error.response.data)\n    })\n  }\n\n  editEntry = (id) => {\n    console.log('Editing the entry ', id)\n  }\n\n  deleteEntry = () => {\n    this.service.deleteEntry(\n      this.state.entryToBeDeleted.id\n    ).then(response => {\n      this.removeFromEntryList(this.state.entryToBeDeleted)\n      successAlert(\"Entry deleted!\")\n    }).catch(error => {\n      errorAlert('Failed to delete entry!')\n    })\n  }\n\n  removeFromEntryList(entry) {\n    const entries = this.state.entries\n    const entryIndex = entries.indexOf(entry)\n    entries.splice(entryIndex, 1)\n    this.setState(entries)\n  }\n\n  showDeletionDialog = (entry) => {\n    this.setState({ showDeletionConfirmDialog: true, entryToBeDeleted: entry })\n  }\n\n  hideDeletionDialog = () => {\n    this.setState({ showDeletionConfirmDialog: false, entryToBeDeleted: {} })\n  }\n\n  render() {\n    const months = this.service.getMonthList()\n    const types = this.service.getTypeList()\n\n    const deletionDialogFooter = (\n      <div>\n        <Button\n          label=\"Yes\"\n          icon=\"pi pi-check\"\n          onClick={this.deleteEntry}\n        />\n        <Button\n          label=\"No\"\n          icon=\"pi pi-times\"\n          onClick={this.hideDeletionDialog}\n          className=\"p-button-secondary\"\n        />\n      </div>\n    );\n    return (\n      <Card title=\"Search Entries\">\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"bs-component\">\n              <fieldset>\n                <FormGroup label=\"Ano: *\" htmlFor=\"inputYear\">\n                  <input type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.year}\n                    onChange={e => this.setState({ year: e.target.value })}\n                    id=\"inputYear\"\n                    placeholder=\"Year\"\n                  />\n                </FormGroup>\n                <FormGroup label=\"Month: \" htmlFor=\"inputMonth\">\n                  <SelectMenu\n                    id=\"inputMonth\"\n                    value={this.state.month}\n                    onChange={e => this.setState({ month: e.target.value })}\n                    className=\"form-control\"\n                    options={months}\n                  />\n                </FormGroup>\n                <FormGroup label=\"Description: *\" htmlFor=\"inputDescription\">\n                  <input type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.description}\n                    onChange={e => this.setState({ description: e.target.value })}\n                    id=\"inputDescription\"\n                    placeholder=\"Description\"\n                  />\n                </FormGroup>\n                <FormGroup label=\"Type: \" htmlFor=\"inputType\">\n                  <SelectMenu\n                    id=\"inputType\"\n                    value={this.state.type}\n                    onChange={e => this.setState({ type: e.target.value })}\n                    className=\"form-control\"\n                    options={types}\n                  />\n                </FormGroup>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-success\"\n                  onClick={this.search}>\n                  Buscar\n                  </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\">\n                  Cadastrar\n                  </button>\n              </fieldset>\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <EntryList\n              entries={this.state.entries}\n              editAction={this.editEntry}\n              deleteAction={this.showDeletionDialog}\n            />\n          </div>\n        </div>\n        <div>\n          <Dialog\n            header=\"Delete entry\"\n            visible={this.state.showDeletionConfirmDialog}\n            style={{ width: '50vw' }}\n            modal={true}\n            footer={deletionDialogFooter}\n            onHide={() => this.setState({ showDeletionConfirmDialog: false })}>\n            Do you confirm the deletion of this entry?\n          </Dialog>\n        </div>\n      </Card>\n    )\n  }\n}\n\nexport default withRouter(Entries)"]},"metadata":{},"sourceType":"module"}