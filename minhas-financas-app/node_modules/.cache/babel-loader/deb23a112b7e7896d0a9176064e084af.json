{"ast":null,"code":"import ApiService from \"../apiService\";\nimport ValidationException from \"../exception/validationException\";\n\nclass UsuarioService extends ApiService {\n  constructor() {\n    super('/api/usuarios');\n  }\n\n  autenticar(credenciais) {\n    return this.post('/autenticar', credenciais);\n  }\n\n  obterSaldo(id) {\n    return this.get(`/${id}/saldo`);\n  }\n\n  save(user) {\n    return this.post(\"/\", user);\n  }\n\n  validate(user) {\n    const errors = [];\n\n    if (!user.nome) {\n      errors.push('Name is required');\n    }\n\n    if (!user.email) {\n      errors.push('Email is required');\n    } else if (!user.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)) {\n      errors.push('Invalid email');\n    }\n\n    if (!user.senha) {\n      errors.push('Password is required');\n    } else if (user.senha !== user.senhaRepeticao) {\n      errors.push('Password confirmation must match password');\n    }\n\n    if (errors && errors.length > 0) {\n      throw new ValidationException();\n    }\n  }\n\n}\n\nexport default UsuarioService;","map":{"version":3,"sources":["/Users/gabrielaraujo/Dev/workspace/web/minhas-financas-app/src/app/services/usuarioService.js"],"names":["ApiService","ValidationException","UsuarioService","constructor","autenticar","credenciais","post","obterSaldo","id","get","save","user","validate","errors","nome","push","email","match","senha","senhaRepeticao","length"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;;AAEA,MAAMC,cAAN,SAA6BF,UAA7B,CAAwC;AAEtCG,EAAAA,WAAW,GAAG;AACZ,UAAM,eAAN;AACD;;AAEDC,EAAAA,UAAU,CAACC,WAAD,EAAc;AACtB,WAAO,KAAKC,IAAL,CAAU,aAAV,EAAyBD,WAAzB,CAAP;AACD;;AAEDE,EAAAA,UAAU,CAACC,EAAD,EAAK;AACb,WAAO,KAAKC,GAAL,CAAU,IAAGD,EAAG,QAAhB,CAAP;AACD;;AAEDE,EAAAA,IAAI,CAACC,IAAD,EAAO;AACT,WAAO,KAAKL,IAAL,CAAU,GAAV,EAAeK,IAAf,CAAP;AACD;;AAEDC,EAAAA,QAAQ,CAACD,IAAD,EAAO;AACb,UAAME,MAAM,GAAG,EAAf;;AAEA,QAAI,CAACF,IAAI,CAACG,IAAV,EAAgB;AACdD,MAAAA,MAAM,CAACE,IAAP,CAAY,kBAAZ;AACD;;AAED,QAAI,CAACJ,IAAI,CAACK,KAAV,EAAiB;AACfH,MAAAA,MAAM,CAACE,IAAP,CAAY,mBAAZ;AACD,KAFD,MAEO,IAAI,CAACJ,IAAI,CAACK,KAAL,CAAWC,KAAX,CAAiB,8BAAjB,CAAL,EAAuD;AAC5DJ,MAAAA,MAAM,CAACE,IAAP,CAAY,eAAZ;AACD;;AAED,QAAI,CAACJ,IAAI,CAACO,KAAV,EAAiB;AACfL,MAAAA,MAAM,CAACE,IAAP,CAAY,sBAAZ;AACD,KAFD,MAEO,IAAIJ,IAAI,CAACO,KAAL,KAAeP,IAAI,CAACQ,cAAxB,EAAwC;AAC7CN,MAAAA,MAAM,CAACE,IAAP,CAAY,2CAAZ;AACD;;AAED,QAAIF,MAAM,IAAIA,MAAM,CAACO,MAAP,GAAgB,CAA9B,EAAiC;AAC/B,YAAM,IAAInB,mBAAJ,EAAN;AACD;AACF;;AAxCqC;;AA2CxC,eAAeC,cAAf","sourcesContent":["import ApiService from \"../apiService\"\nimport ValidationException from \"../exception/validationException\"\n\nclass UsuarioService extends ApiService {\n\n  constructor() {\n    super('/api/usuarios')\n  }\n\n  autenticar(credenciais) {\n    return this.post('/autenticar', credenciais)\n  }\n\n  obterSaldo(id) {\n    return this.get(`/${id}/saldo`)\n  }\n\n  save(user) {\n    return this.post(\"/\", user)\n  }\n\n  validate(user) {\n    const errors = []\n\n    if (!user.nome) {\n      errors.push('Name is required')\n    }\n\n    if (!user.email) {\n      errors.push('Email is required')\n    } else if (!user.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)) {\n      errors.push('Invalid email')\n    }\n\n    if (!user.senha) {\n      errors.push('Password is required')\n    } else if (user.senha !== user.senhaRepeticao) {\n      errors.push('Password confirmation must match password')\n    }\n\n    if (errors && errors.length > 0) {\n      throw new ValidationException()\n    }\n  }\n}\n\nexport default UsuarioService"]},"metadata":{},"sourceType":"module"}