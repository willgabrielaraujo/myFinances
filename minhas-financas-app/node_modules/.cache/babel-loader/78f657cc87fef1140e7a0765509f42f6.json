{"ast":null,"code":"import ApiService from '../apiService';\n\nclass EntryService extends ApiService {\n  constructor() {\n    super('/api/lancamentos');\n  }\n\n  filter(entry) {\n    let filters = `?usuario=${entry.usuario}&ano=${entry.year}`;\n\n    if (entry.month) {\n      filters = `${this.filter}&mes=${entry.month}`;\n    }\n\n    if (entry.type) {\n      filters = `${filters}&tipo=${entry.type}`;\n    }\n\n    if (entry.status) {\n      filters = `${filters}&status=${entry.status}`;\n    }\n\n    if (entry.description) {\n      filters = `${filters}&descricao=${entry.description}`;\n    }\n\n    return this.get(filters);\n  }\n\n  save(entry) {\n    this.post('/', entry);\n  }\n\n  deleteEntry(id) {\n    return this.delete(`/${id}`);\n  }\n\n  getMonthList() {\n    return [{\n      label: 'Choose...',\n      value: ''\n    }, {\n      label: 'January',\n      value: 1\n    }, {\n      label: 'February',\n      value: 2\n    }, {\n      label: 'March',\n      value: 3\n    }, {\n      label: 'April',\n      value: 4\n    }, {\n      label: 'May',\n      value: 5\n    }, {\n      label: 'June',\n      value: 6\n    }, {\n      label: 'July',\n      value: 7\n    }, {\n      label: 'August',\n      value: 8\n    }, {\n      label: 'September',\n      value: 9\n    }, {\n      label: 'October',\n      value: 10\n    }, {\n      label: 'November',\n      value: 11\n    }, {\n      label: 'December',\n      value: 12\n    }];\n  }\n\n  getTypeList() {\n    return [{\n      label: 'Choose...',\n      value: ''\n    }, {\n      label: 'Despesa',\n      value: 'DESPESA'\n    }, {\n      label: 'Receita',\n      value: 'RECEITA'\n    }];\n  }\n\n}\n\nexport default EntryService;","map":{"version":3,"sources":["/Users/gabrielaraujo/Dev/workspace/web/minhas-financas-app/src/app/services/entryService.js"],"names":["ApiService","EntryService","constructor","filter","entry","filters","usuario","year","month","type","status","description","get","save","post","deleteEntry","id","delete","getMonthList","label","value","getTypeList"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,YAAN,SAA2BD,UAA3B,CAAsC;AAEpCE,EAAAA,WAAW,GAAG;AACZ,UAAM,kBAAN;AACD;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,QAAIC,OAAO,GAAI,YAAWD,KAAK,CAACE,OAAQ,QAAOF,KAAK,CAACG,IAAK,EAA1D;;AAEA,QAAIH,KAAK,CAACI,KAAV,EAAiB;AACfH,MAAAA,OAAO,GAAI,GAAE,KAAKF,MAAO,QAAOC,KAAK,CAACI,KAAM,EAA5C;AACD;;AAED,QAAIJ,KAAK,CAACK,IAAV,EAAgB;AACdJ,MAAAA,OAAO,GAAI,GAAEA,OAAQ,SAAQD,KAAK,CAACK,IAAK,EAAxC;AACD;;AAED,QAAIL,KAAK,CAACM,MAAV,EAAkB;AAChBL,MAAAA,OAAO,GAAI,GAAEA,OAAQ,WAAUD,KAAK,CAACM,MAAO,EAA5C;AACD;;AAED,QAAIN,KAAK,CAACO,WAAV,EAAuB;AACrBN,MAAAA,OAAO,GAAI,GAAEA,OAAQ,cAAaD,KAAK,CAACO,WAAY,EAApD;AACD;;AAED,WAAO,KAAKC,GAAL,CAASP,OAAT,CAAP;AACD;;AAEDQ,EAAAA,IAAI,CAACT,KAAD,EAAQ;AACV,SAAKU,IAAL,CAAU,GAAV,EAAeV,KAAf;AACD;;AAEDW,EAAAA,WAAW,CAACC,EAAD,EAAK;AACd,WAAO,KAAKC,MAAL,CAAa,IAAGD,EAAG,EAAnB,CAAP;AACD;;AACDE,EAAAA,YAAY,GAAG;AACb,WAAO,CACL;AAAEC,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KADK,EAEL;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAFK,EAGL;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAHK,EAIL;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAJK,EAKL;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KALK,EAML;AAAED,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KANK,EAOL;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAPK,EAQL;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KARK,EASL;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KATK,EAUL;AAAED,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAVK,EAWL;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAXK,EAYL;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAZK,EAaL;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAbK,CAAP;AAeD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,WAAO,CACL;AAAEF,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KADK,EAEL;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAFK,EAGL;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAHK,CAAP;AAKD;;AA3DmC;;AA6DtC,eAAenB,YAAf","sourcesContent":["import ApiService from '../apiService';\n\nclass EntryService extends ApiService {\n\n  constructor() {\n    super('/api/lancamentos')\n  }\n\n  filter(entry) {\n    let filters = `?usuario=${entry.usuario}&ano=${entry.year}`\n\n    if (entry.month) {\n      filters = `${this.filter}&mes=${entry.month}`\n    }\n\n    if (entry.type) {\n      filters = `${filters}&tipo=${entry.type}`\n    }\n\n    if (entry.status) {\n      filters = `${filters}&status=${entry.status}`\n    }\n\n    if (entry.description) {\n      filters = `${filters}&descricao=${entry.description}`\n    }\n\n    return this.get(filters)\n  }\n\n  save(entry) {\n    this.post('/', entry)\n  }\n\n  deleteEntry(id) {\n    return this.delete(`/${id}`)\n  }\n  getMonthList() {\n    return [\n      { label: 'Choose...', value: '' },\n      { label: 'January', value: 1 },\n      { label: 'February', value: 2 },\n      { label: 'March', value: 3 },\n      { label: 'April', value: 4 },\n      { label: 'May', value: 5 },\n      { label: 'June', value: 6 },\n      { label: 'July', value: 7 },\n      { label: 'August', value: 8 },\n      { label: 'September', value: 9 },\n      { label: 'October', value: 10 },\n      { label: 'November', value: 11 },\n      { label: 'December', value: 12 }\n    ]\n  }\n\n  getTypeList() {\n    return [\n      { label: 'Choose...', value: '' },\n      { label: 'Despesa', value: 'DESPESA' },\n      { label: 'Receita', value: 'RECEITA' }\n    ]\n  }\n}\nexport default EntryService\n"]},"metadata":{},"sourceType":"module"}